{"version":3,"sources":["Components/DisplayFilter.js","Components/Person.js","Components/DisplayPhonebook.js","Components/PersonForm.js","Components/Notification.js","Services/Persons.js","App.js","index.js"],"names":["DisplayFilter","newFilter","handleFilter","value","onChange","Person","name","number","remove","onClick","DisplayPhonebook","persons","check","removeContact","list","concat","filter","item","toLowerCase","includes","map","person","key","id","PersonForm","addNew","newName","newPhoneNumber","handleNewNameChange","handleNewPhoneNumber","onSubmit","type","Notification","message","className","baseUrl","axios","get","newObject","post","delete","updatedObject","put","App","useState","setPersons","setNewName","setNewPhoneNumber","setNewFilter","notificationMessage","setNotificationMessage","handleNotificationMessage","messageToShow","withClassName","setTimeout","useEffect","personService","then","response","data","event","target","preventDefault","window","confirm","objectToUpdate","find","object","catch","error","console","log","n","reduce","prev","current","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9730881.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst DisplayFilter = ({ newFilter, handleFilter }) => { \r\n    return (\r\n        <div>\r\n        <input\r\n            value={newFilter}\r\n                onChange={handleFilter} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayFilter","import React from 'react'\r\n\r\nconst Person = ({ name, number, remove }) => {\r\n    return (\r\n        <p>{name} {number}\r\n            &nbsp;\r\n            <button\r\n                onClick={remove}>\r\n                {'Delete'}\r\n            </button>\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person';\r\n\r\nconst DisplayPhonebook = ({ persons, check, removeContact}) => {\r\n    let list = []\r\n    if (check === '') {\r\n        list = persons.concat()\r\n    } else {\r\n        list = persons.filter(item => item.name.toLowerCase().includes(check.toLowerCase()))\r\n    }\r\n    return (\r\n        <div>\r\n            <h2>Numbers</h2>\r\n            {list.map(person =>\r\n                <Person\r\n                    key={person.id}\r\n                    name={person.name}\r\n                    number={person.number}\r\n                    remove={() => removeContact(person.id)}\r\n                />)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayPhonebook","import React from 'react'\r\n\r\nconst PersonForm = ({ addNew, newName, newPhoneNumber, handleNewNameChange, handleNewPhoneNumber }) => {\r\n\r\n    return (\r\n        <div>\r\n            <h2>Add new</h2>\r\n\r\n            <form onSubmit={addNew} >\r\n                <div>\r\n                    name: <input\r\n                        value={newName}\r\n                        onChange={handleNewNameChange}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    number: <input\r\n                        value={newPhoneNumber}\r\n                        onChange={handleNewPhoneNumber}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">add</button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className={className} >\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst addNew = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst remove = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = ( id, updatedObject ) => {\r\n    return axios.put(`${baseUrl}/${id}`, updatedObject)\r\n}\r\n\r\nexport default { getAll, addNew, remove, update }","import React, { useState, useEffect } from 'react'\r\nimport DisplayFilter from './Components/DisplayFilter';\r\nimport DisplayPhonebook from './Components/DisplayPhonebook';\r\nimport PersonForm from './Components/PersonForm';\r\nimport Notification from './Components/Notification';\r\nimport personService from './Services/Persons'\r\n\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newPhoneNumber, setNewPhoneNumber] = useState('')\r\n    const [newFilter, setNewFilter] = useState('')\r\n    const [notificationMessage, setNotificationMessage] = useState([])\r\n\r\n\r\n    const handleFilter = (event) => {\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handlePhoneNrChange = (event) => {\r\n        setNewPhoneNumber(event.target.value)\r\n    }\r\n\r\n    const addNew = (event) => {\r\n        event.preventDefault()\r\n        let personsNames = persons.map((person) => person.name)\r\n        if (personsNames.includes(newName)) {\r\n            //if the contact is already in the phonebook, the user can update the contact phonenumber\r\n            if (window.confirm(\"Contact is already in the phonebook. Do you want to replace?\")) {\r\n                const objectToUpdate = persons.find(object => object.name === newName)\r\n                const updatedObject = {\r\n                    id: objectToUpdate.id,\r\n                    name: objectToUpdate.name,\r\n                    number: newPhoneNumber\r\n                }\r\n                personService\r\n                    .update(objectToUpdate.id, updatedObject)\r\n                    .then(response => {\r\n                        setPersons(persons.map(person => person.id !== updatedObject.id ? person : response.data))\r\n                        handleNotificationMessage([`${updatedObject.name} successfully updated`, 'notification'])\r\n                        setNewName('')\r\n                        setNewPhoneNumber('')\r\n                    })\r\n                    .catch(error => {\r\n                        console.log('fail')\r\n                        handleNotificationMessage([`${updatedObject.name} cannot be found`, 'error'])\r\n                        setPersons(persons.filter(n => n.id !== updatedObject.id))\r\n                    })\r\n            }\r\n        }\r\n        else {\r\n            const maxID = persons.reduce((prev, current) => (prev.id > current.id) ? prev : current)\r\n            const newObject = {\r\n                id: maxID.id + 1,\r\n                name: newName,\r\n                number: newPhoneNumber\r\n            }\r\n            console.log(newObject)\r\n            personService\r\n                .addNew(newObject)\r\n                .then(response => {\r\n                    setPersons(persons.concat(response.data))\r\n                    handleNotificationMessage([`${newObject.name} successfully added`, 'notification'])\r\n                    setNewName('')\r\n                    setNewPhoneNumber('')\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleNotificationMessage = (message) => {\r\n        const messageToShow = message[0]\r\n        const withClassName = message[1]\r\n        setNotificationMessage([messageToShow, withClassName])\r\n        setTimeout(() => { setNotificationMessage([]) }, 5000)\r\n    }\r\n\r\n    const removeContact = (id) => {\r\n        if (window.confirm(\"Do you really want to delete this contact?\")) {\r\n            personService\r\n                .remove(id)\r\n                .then(res => {\r\n                    setPersons(persons.filter(person => person.id !== id))\r\n                    console.log(res)\r\n                })\r\n        }\r\n    }       \r\n\r\n    useEffect(() => {\r\n        personService\r\n            .getAll()\r\n            .then(response => {\r\n                setPersons(response.data)\r\n            })\r\n    }, [])\r\n       \r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={notificationMessage[0]} className={notificationMessage[1]} />\r\n            <DisplayFilter newFilter={newFilter} handleFilter={handleFilter} />\r\n            <PersonForm\r\n                newName={newName}\r\n                newPhoneNumber={newPhoneNumber}\r\n                handleNewPhoneNumber={handlePhoneNrChange}\r\n                handleNewNameChange={handleNameChange}\r\n                addNew={addNew}\r\n            />\r\n            <DisplayPhonebook persons={persons} check={newFilter} removeContact={removeContact} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n/*\n* Start the json server\n* npx json-server --port 3001 --watch db.json\n*/"],"sourceRoot":""}